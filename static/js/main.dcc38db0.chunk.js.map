{"version":3,"sources":["components/Nav/Nav.js","components/History/History.js","store/actions/index.js","store/constants/index.js","components/WeatherForecast/WeatheForecastItem/WeatherForecastItem.js","components/WeatherForecast/WeatherForecast.js","components/CurrentWeather/CurrentWeather.js","utils/WeatherDataServices.js","components/App/App.js","store/reducers/cities.js","store/reducers/current.js","store/reducers/forecast.js","store/reducers/index.js","index.js"],"names":["Nav","react_default","a","createElement","className","react_router_dom","to","History","getWeatherFromHistory","_ref","target","_this","props","getInfoFromApi","innerHTML","deleteCities","_this2","this","cities","btn","Object","keys","length","onClick","map","city","i","key","concat","toUpperCase","slice","Component","connect","state","type","WeatherForecastItem","weatherForecast","weather","dt_txt","main","wind","imgSrc","icon","temp","Math","round","weatherDescription","description","substr","src","alt","speed","forecast","list","filter","time","includes","WeatheForecastItem_WeatherForecastItem","assign","current","name","sys","clouds","country","humidity","pressure","all","API_KEY","WeatherDataServices","fetch","then","response","json","catch","err","console","log","App","handleSubmit","e","preventDefault","cityInput","value","cityLowerCase","toLowerCase","getCurrentWeather","currentWeather","getWeatherForecast","message","alert","addCurrentWeather","addWeatherForecast","addCity","onSubmit","placeholder","ref","input","components_Nav_Nav","components_History_History","react_router","exact","path","component","CurrentWeather","WeatherForecast","appState","payload","initialState","arguments","undefined","action","objectSpread","defineProperty","combineReducers","store","createStore","reducer","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","components_App_App","document","getElementById"],"mappings":"+UAiBeA,eAbH,kBACRC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,KAAT,UAEJL,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,SAAT,kBCNVC,oNACFC,sBAAwB,SAAAC,GAAgB,IAAbC,EAAaD,EAAbC,OACvBC,EAAKC,MAAMC,eAAeH,EAAOI,cAGrCC,aAAe,WACXJ,EAAKC,MAAMG,wFAGN,IAAAC,EAAAC,KACGC,EAAWD,KAAKL,MAAhBM,OAGFC,EAD0C,IAA/BC,OAAOC,KAAKH,GAAQI,OAEjCrB,EAAAC,EAAAC,cAAA,UAAQoB,QAASN,KAAKF,cAAtB,UAEA,GAGJ,OACId,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,UACKiB,OAAOC,KAAKH,GAAQM,IAAI,SAACC,EAAMC,GAAP,OACrBzB,EAAAC,EAAAC,cAAA,MAAIwB,IAAKD,EAAGH,QAASP,EAAKR,uBAA1B,GAAAoB,OACQH,EAAK,GAAGI,eADhBD,OACgCH,EAAKK,MAAM,QAIlDX,UA5BKY,cAsCPC,cAJS,SAAAC,GAAK,MAAK,CAC9Bf,OAAQe,EAAMf,SAGsB,CAAEH,aC3Bd,iBAAO,CAAEmB,KCfR,mBF0CdF,CAA2CzB,GGjB3C4B,SAxBa,SAAA1B,GAAyB,IAAtB2B,EAAsB3B,EAAtB2B,gBACnBC,EAAgCD,EAAhCC,QAASC,EAAuBF,EAAvBE,OAAQC,EAAeH,EAAfG,KAAMC,EAASJ,EAATI,KACzBC,EAAM,oCAAAb,OAAuCS,EAAQ,GAAGK,KAAlD,QACNC,EAAOC,KAAKC,MAAMN,EAAKI,MACvBG,EAAqBT,EAAQ,GAAGU,YAAYlB,cAElD,OACI5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACXH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAKkC,EAAQ,GAAGE,MAChBtC,EAAAC,EAAAC,cAAA,SAAImC,EAAOU,OAAO,EAAG,MAEzB/C,EAAAC,EAAAC,cAAA,OAAK8C,IAAKR,EAAQS,IAAI,GAAG9C,UAAU,0BACnCH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UAAKwC,EAAL,QACA1C,EAAAC,EAAAC,cAAA,UAAKqC,EAAKW,MAAV,SAEJlD,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iCACR0C,MCKFd,cAJS,SAAAC,GAAK,MAAK,CAC9BmB,SAAUnB,EAAMmB,WAGLpB,CAlBS,SAAAvB,GAAkB,IAAf2C,EAAe3C,EAAf2C,SACvB,OAAqC,IAAjChC,OAAOC,KAAK+B,GAAU9B,OACf,GAGM8B,EAATC,KAGHC,OAAO,SAAAC,GAAI,OAAIA,EAAKjB,OAAOkB,SAVN,cAWrBhC,IAAI,SAACY,EAAiBV,GAAlB,OACDzB,EAAAC,EAAAC,cAACsD,EAADrC,OAAAsC,OAAA,CAAqB/B,IAAKD,GAAO,CAAEU,yBC2BhCJ,qBAJS,SAAAC,GAAK,MAAK,CAC9B0B,QAAS1B,EAAM0B,UAGJ3B,CAxCQ,SAAAvB,GAAiB,IAAdkD,EAAclD,EAAdkD,QACtB,GAAoC,IAAhCvC,OAAOC,KAAKsC,GAASrC,OACrB,MAAO,GAFyB,IAK5BsC,EAA2CD,EAA3CC,KAAMC,EAAqCF,EAArCE,IAAKtB,EAAgCoB,EAAhCpB,KAAMF,EAA0BsB,EAA1BtB,QAASG,EAAiBmB,EAAjBnB,KAAMsB,EAAWH,EAAXG,OAClCrB,EAAM,oCAAAb,OAAuCS,EAAQ,GAAGK,KAAlD,QACNC,EAAOC,KAAKC,MAAMN,EAAKI,MACvBG,EAAqBT,EAAQ,GAAGU,YAAYlB,cAElD,OACI5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACVwD,EADL,KACaC,EAAIE,SAEjB9D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACVuC,EADL,OAEI1C,EAAAC,EAAAC,cAAA,OAAK8C,IAAKR,EAAQS,IAAI,MAE1BjD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACV0C,IAGT7C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACXH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,uBAAeoC,EAAKyB,SAApB,MACA/D,EAAAC,EAAAC,cAAA,uBAAeoC,EAAK0B,SAApB,OACAhE,EAAAC,EAAAC,cAAA,yBAAiBqC,EAAKW,MAAtB,QACAlD,EAAAC,EAAAC,cAAA,qBAAa2D,EAAOI,WCjClCC,EAAU,uDA0BDC,EAAA,8GArBO3C,GACd,OAAO4C,MALU,qDAKe5C,EAAO0C,GAClCG,KAAK,SAAAC,GACF,OAAOA,EAASC,SAEnBC,MAAM,SAAAC,GACHC,QAAQC,IAAIF,gDAILjD,GACf,OAAO4C,MAdW,sDAce5C,EAAO0C,GACnCG,KAAK,SAAAC,GACF,OAAOA,EAASC,SAEnBC,MAAM,SAAAC,GACHC,QAAQC,IAAIF,eCNtBG,6MAKFC,aAAe,SAAAC,GACXA,EAAEC,iBAEFrE,EAAKE,eAAeF,EAAKsE,UAAUC,OACnCvE,EAAKsE,UAAUC,MAAQ,MAG3BrE,eAAiB,SAAAY,GACb,IAAM0D,EAAgB1D,EAAK2D,cAE3BhB,EAAoBiB,kBAAkBF,GAAeb,KACjD,SAAAgB,GACIlB,EAAoBmB,mBAAmBJ,GAAeb,KAClD,SAAAlC,GACI,GAA+B,mBAA3BkD,EAAeE,QAEf,OADAC,MAAM,wCACC,EAEX9E,EAAKC,MAAM8E,kBAAkBJ,GAC7B3E,EAAKC,MAAM+E,mBAAmBvD,GAC9BzB,EAAKC,MAAMgF,QAAQT,2FAvBnClE,KAAKJ,eAAe,yCA8Bf,IAAAG,EAAAC,KACL,OACIhB,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACIJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UAAd,0BACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,QAAM0F,SAAU5E,KAAK6D,cACjB7E,EAAAC,EAAAC,cAAA,SACI2F,YAAY,sCACZ1F,UAAU,eACV8B,KAAK,OACL6D,IAAK,SAAAC,GACDhF,EAAKiE,UAAYe,OAKjC/F,EAAAC,EAAAC,cAAC8F,EAAD,MACAhG,EAAAC,EAAAC,cAAC+F,EAAD,CAASrF,eAAgBI,KAAKJ,iBAC9BZ,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWC,IACjCtG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAOE,KAAK,QAAQC,UAAWE,aApDjCzE,aA+DHC,cAJS,SAAAC,GAAK,MAAK,CAC9BwE,SAAUxE,IAG0B,CACpC2D,QNxEmB,SAAAnE,GAAI,MAAK,CAAES,KCPV,WDO0BT,SMyE9CiE,kBNxE6B,SAAAgB,GAAO,MAAK,CACzCxE,KCN2B,kBDO3BwE,YMuEAf,mBNrE8B,SAAAe,GAAO,MAAK,CAC1CxE,KCX4B,mBDY5BwE,aMgEW1E,CAIZ6C,2BChFG8B,EAAe,GAaNzF,EAXA,WAAkC,IAAjCe,EAAiC2E,UAAAtF,OAAA,QAAAuF,IAAAD,UAAA,GAAAA,UAAA,GAAzBD,EAAcG,EAAWF,UAAAtF,OAAA,EAAAsF,UAAA,QAAAC,EAC7C,OAAQC,EAAO5E,MACX,INNgB,WMOZ,OAAOd,OAAA2F,EAAA,EAAA3F,CAAA,GAAKa,EAAZb,OAAA4F,EAAA,EAAA5F,CAAA,GAAoB0F,EAAOrF,KAAOqF,EAAOrF,OAC7C,INPqB,gBMQjB,MAAO,GACX,QACI,OAAOQ,ICTb0E,EAAe,GAWNhD,EATC,WAAkC,IAAjC1B,EAAiC2E,UAAAtF,OAAA,QAAAuF,IAAAD,UAAA,GAAAA,UAAA,GAAzBD,EAAcG,EAAWF,UAAAtF,OAAA,EAAAsF,UAAA,QAAAC,EAC9C,OAAQC,EAAO5E,MACX,IPHuB,kBOInB,OAAOd,OAAA2F,EAAA,EAAA3F,CAAA,GAAKa,EAAU6E,EAAOJ,SACjC,QACI,OAAOzE,ICPb0E,EAAe,GAWNvD,EATE,WAAkC,IAAjCnB,EAAiC2E,UAAAtF,OAAA,QAAAuF,IAAAD,UAAA,GAAAA,UAAA,GAAzBD,EAAcG,EAAWF,UAAAtF,OAAA,EAAAsF,UAAA,QAAAC,EAC/C,OAAQC,EAAO5E,MACX,IRJwB,mBQKpB,OAAOd,OAAA2F,EAAA,EAAA3F,CAAA,GAAKa,EAAU6E,EAAOJ,SACjC,QACI,OAAOzE,ICJJgF,cAAgB,CAC3B/F,SACAyC,UACAP,aCDE8D,EAAQC,YACVC,EACAC,OAAOC,8BAAgCD,OAAOC,gCAGlDC,IAASC,OACLvH,EAAAC,EAAAC,cAACsH,EAAA,EAAD,CAAUP,MAAOA,GACbjH,EAAAC,EAAAC,cAACuH,EAAD,OAEJC,SAASC,eAAe","file":"static/js/main.dcc38db0.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport './Nav.scss';\n\nconst Nav = () => (\n    <nav className='nav'>\n        <ul>\n            <li>\n                <Link to='/'>Today</Link>\n            </li>\n            <li>\n                <Link to='/next'>Next days</Link>\n            </li>\n        </ul>\n    </nav>\n);\n\nexport default Nav;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './History.scss';\nimport { deleteCities } from '../../store/actions';\n\nclass History extends Component {\n    getWeatherFromHistory = ({ target }) => {\n        this.props.getInfoFromApi(target.innerHTML);\n    };\n\n    deleteCities = () => {\n        this.props.deleteCities();\n    };\n\n    render() {\n        const { cities } = this.props;\n\n        const isCities = Object.keys(cities).length !== 0;\n        const btn = isCities ? (\n            <button onClick={this.deleteCities}>&#10006;</button>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className='history'>\n                <ul>\n                    {Object.keys(cities).map((city, i) => (\n                        <li key={i} onClick={this.getWeatherFromHistory}>\n                            {`${city[0].toUpperCase()}${city.slice(1)}`}\n                        </li>\n                    ))}\n                </ul>\n                {btn}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    cities: state.cities,\n});\n\nexport default connect(mapStateToProps, { deleteCities })(History);\n","import {\n    ADD_CITY,\n    DELETE_CITIES,\n    WEATHER_FORECAST,\n    CURRENT_WEATHER,\n} from '../constants/index';\n\nexport const addCity = city => ({ type: ADD_CITY, city });\nexport const addCurrentWeather = payload => ({\n    type: CURRENT_WEATHER,\n    payload,\n});\nexport const addWeatherForecast = payload => ({\n    type: WEATHER_FORECAST,\n    payload,\n});\nexport const deleteCities = () => ({ type: DELETE_CITIES });\n","export const ADD_CITY = 'ADD_CITY';\nexport const DELETE_CITIES = 'DELETE_CITIES';\nexport const WEATHER_FORECAST = 'WEATHER_FORECAST';\nexport const CURRENT_WEATHER = 'CURRENT_WEATHER';\n","import React from 'react';\n\nconst WeatherForecastItem = ({ weatherForecast }) => {\n    const { weather, dt_txt, main, wind } = weatherForecast;\n    const imgSrc = `https://openweathermap.org/img/w/${weather[0].icon}.png`;\n    const temp = Math.round(main.temp);\n    const weatherDescription = weather[0].description.toUpperCase();\n\n    return (\n        <div className='forecast-weather-info'>\n            <div>\n                <h2>{weather[0].main}</h2>\n                <p>{dt_txt.substr(0, 10)}</p>\n            </div>\n            <img src={imgSrc} alt='' className='forecast-weather__img' />\n            <ul>\n                <li>{temp}&deg;</li>\n                <li>{wind.speed} m/s</li>\n            </ul>\n            <p className='forecast-weather__description'>\n                {weatherDescription}\n            </p>\n        </div>\n    );\n};\n\nexport default WeatherForecastItem;\n","import React from 'react';\nimport './WeatherForecast.scss';\nimport { connect } from 'react-redux';\nimport { WeatherForecastItem } from './WeatheForecastItem';\n\nconst WEATHER_FORECAST_TIME = '12:00:00';\n\nconst WeatherForecast = ({ forecast }) => {\n    if (Object.keys(forecast).length === 0) {\n        return '';\n    }\n\n    const { list } = forecast;\n\n    return list\n        .filter(time => time.dt_txt.includes(WEATHER_FORECAST_TIME))\n        .map((weatherForecast, i) => (\n            <WeatherForecastItem key={i} {...{ weatherForecast }} />\n        ));\n};\n\nconst mapStateToProps = state => ({\n    forecast: state.forecast,\n});\n\nexport default connect(mapStateToProps)(WeatherForecast);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport './CurrentWeather.scss';\n\nconst CurrentWeather = ({ current }) => {\n    if (Object.keys(current).length === 0) {\n        return '';\n    }\n\n    const { name, sys, main, weather, wind, clouds } = current;\n    const imgSrc = `https://openweathermap.org/img/w/${weather[0].icon}.png`;\n    const temp = Math.round(main.temp);\n    const weatherDescription = weather[0].description.toUpperCase();\n\n    return (\n        <div className='current-weather-info'>\n            <div className='current-weather__main'>\n                <div className='current-weather__city'>\n                    {name}, {sys.country}\n                </div>\n                <div className='current-weather__temp'>\n                    {temp}&deg;\n                    <img src={imgSrc} alt='' />\n                </div>\n                <div className='current-weather__description'>\n                    {weatherDescription}\n                </div>\n            </div>\n            <div className='current-weather__more'>\n                <ul>\n                    <li>Humidity: {main.humidity} %</li>\n                    <li>Pressure: {main.pressure} mb</li>\n                    <li>Wind speed: {wind.speed} m/s</li>\n                    <li>Clouds: {clouds.all}</li>\n                </ul>\n            </div>\n        </div>\n    );\n};\n\nconst mapStateToProps = state => ({\n    current: state.current,\n});\n\nexport default connect(mapStateToProps)(CurrentWeather);\n","const API_KEY = '&units=metric&APPID=9e5f732b51c403196a6a5096551e6098';\nconst API_DATA_WEATHER = 'https://api.openweathermap.org/data/2.5/weather?q=';\nconst API_DATA_FORECAST = 'https://api.openweathermap.org/data/2.5/forecast?q=';\n\nclass WeatherDataService {\n    getCurrentWeather(city) {\n        return fetch(API_DATA_WEATHER + city + API_KEY)\n            .then(response => {\n                return response.json();\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    }\n\n    getWeatherForecast(city) {\n        return fetch(API_DATA_FORECAST + city + API_KEY)\n            .then(response => {\n                return response.json();\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    }\n}\n\nexport default new WeatherDataService();\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport './App.scss';\nimport { Nav } from '../Nav';\nimport { History } from '../History';\nimport { WeatherForecast } from '../WeatherForecast';\nimport { CurrentWeather } from '../CurrentWeather';\nimport WeatherDataServices from '../../utils/WeatherDataServices';\nimport {\n    addCity,\n    addCurrentWeather,\n    addWeatherForecast,\n} from '../../store/actions';\n\nclass App extends Component {\n    componentDidMount() {\n        this.getInfoFromApi('kiev');\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n\n        this.getInfoFromApi(this.cityInput.value);\n        this.cityInput.value = '';\n    };\n\n    getInfoFromApi = city => {\n        const cityLowerCase = city.toLowerCase();\n\n        WeatherDataServices.getCurrentWeather(cityLowerCase).then(\n            currentWeather => {\n                WeatherDataServices.getWeatherForecast(cityLowerCase).then(\n                    weatherForecast => {\n                        if (currentWeather.message === 'city not found') {\n                            alert('No found city, please correct name!');\n                            return false;\n                        }\n                        this.props.addCurrentWeather(currentWeather);\n                        this.props.addWeatherForecast(weatherForecast);\n                        this.props.addCity(cityLowerCase);\n                    }\n                );\n            }\n        );\n    };\n\n    render() {\n        return (\n            <Router>\n                <div className='container'>\n                    <h1 className='header'>React Weather Forecast</h1>\n                    <div className='search-wrapper'>\n                        <form onSubmit={this.handleSubmit}>\n                            <input\n                                placeholder='Enter city in english... (Kiev, UA)'\n                                className='search-input'\n                                type='text'\n                                ref={input => {\n                                    this.cityInput = input;\n                                }}\n                            />\n                        </form>\n                    </div>\n                    <Nav />\n                    <History getInfoFromApi={this.getInfoFromApi} />\n                    <Route exact path='/' component={CurrentWeather} />\n                    <Route path='/next' component={WeatherForecast} />\n                </div>\n            </Router>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    appState: state,\n});\n\nexport default connect(mapStateToProps, {\n    addCity,\n    addCurrentWeather,\n    addWeatherForecast,\n})(App);\n","import { ADD_CITY, DELETE_CITIES } from '../constants';\n\nconst initialState = {};\n\nconst cities = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_CITY:\n            return { ...state, [action.city]: action.city };\n        case DELETE_CITIES:\n            return {};\n        default:\n            return state;\n    }\n};\n\nexport default cities;\n","import { CURRENT_WEATHER } from '../constants';\n\nconst initialState = {};\n\nconst current = (state = initialState, action) => {\n    switch (action.type) {\n        case CURRENT_WEATHER:\n            return { ...state, ...action.payload };\n        default:\n            return state;\n    }\n};\n\nexport default current;\n","import { WEATHER_FORECAST } from '../constants';\n\nconst initialState = {};\n\nconst forecast = (state = initialState, action) => {\n    switch (action.type) {\n        case WEATHER_FORECAST:\n            return { ...state, ...action.payload };\n        default:\n            return state;\n    }\n};\n\nexport default forecast;\n","import { combineReducers } from 'redux';\nimport cities from './cities';\nimport current from './current';\nimport forecast from './forecast';\n\nexport default combineReducers({\n    cities,\n    current,\n    forecast,\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './components/App';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport reducer from './store/reducers';\n\nconst store = createStore(\n    reducer,\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}