{"version":3,"sources":["components/Nav/Nav.js","components/History/History.js","components/WeatherForecast/WeatheForecastItem/WeatherForecastItem.js","components/WeatherForecast/WeatherForecast.js","components/CurrentWeather/CurrentWeather.js","services/WeatherDataServices.js","components/App/App.js","reducers/cities.js","reducers/current.js","reducers/forecast.js","reducers/index.js","index.js"],"names":["Nav","react_default","a","createElement","className","react_router_dom","to","History","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","checkWeatherFromHistory","e","getInfoFromApi","target","innerHTML","delAllCities","checkCities","appState","cities","map","item","i","citiesHistory","newCity","toUpperCase","includes","splice","push","_this2","city","key","onClick","Component","connect","state","dispatch","type","payload","_props$state","weather","dt_txt","main","wind","substr","src","concat","icon","alt","Math","round","temp","speed","description","render","forecast","length","undefined","weatherForecast","list","filter","time","forecastItem","WeatheForecastItem_WeatherForecastItem","arrCurrentWeather","current","_arrCurrentWeather","name","sys","clouds","country","humidity","pressure","all","API_KEY","WeatherDataServices","fetch","then","response","json","catch","err","console","log","App","handleSubmit","preventDefault","cityInput","value","getCurrentWeather","currentWeather","getWeatherForecast","message","alert","addCurrentWeather","addWeatherForecast","addCity","onSubmit","placeholder","ref","input","components_Nav_Nav","components_History_History","react_router","exact","path","component","CurrentWeather","WeatherForecast","assign","initialState","arguments","action","toConsumableArray","combineReducers","store","createStore","reducer","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","es","components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.e58980c3.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./style.scss\";\nimport { Link } from \"react-router-dom\";\n\nconst Nav = () => (\n  <nav className=\"nav\">\n    <ul>\n      <li>\n        <Link to=\"/\">Today</Link>\n      </li>\n      <li>\n        <Link to=\"/next\">Next days</Link>\n      </li>\n    </ul>\n  </nav>\n);\n\nexport default Nav;\n","import React, { Component } from \"react\";\nimport \"./style.scss\";\nimport { connect } from \"react-redux\";\n\nclass History extends Component {\n  constructor(props) {\n    super(props);\n    this.citiesHistory = [];\n  }\n\n  checkWeatherFromHistory = e => {\n    this.props.getInfoFromApi(e.target.innerHTML);\n  };\n\n  delAllCities = () => {\n    this.props.delAllCities();\n  };\n\n  /*\n   * check cities for duplicate and out limit to 5\n   * */\n  checkCities = () => {\n    this.props.appState.cities.map((item, i) => {\n      if (item === null) {\n        this.citiesHistory = [];\n      } else {\n        const newCity = item.toUpperCase();\n        if (!this.citiesHistory.includes(newCity)) {\n          i > 3\n            ? this.citiesHistory.splice(0, 1, newCity)\n            : this.citiesHistory.push(newCity);\n        }\n      }\n    });\n  };\n\n  render() {\n    this.checkCities();\n\n    return (\n      <div className=\"history\">\n        <ul>\n          {this.citiesHistory.map((city, i) => (\n            <li key={i} onClick={this.checkWeatherFromHistory}>\n              {city}\n            </li>\n          ))}\n        </ul>\n        <button onClick={this.delAllCities}>&#10006;</button>\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    appState: state\n  }),\n  dispatch => ({\n    delAllCities: () => {\n      const payload = null;\n      dispatch({ type: \"DELETE_CITIES\", payload });\n    }\n  })\n)(History);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nconst WeatherForecastItem = props => {\n  const { weather, dt_txt, main, wind } = props.state;\n  return (\n    <div className=\"forecast-weather-info\">\n      <div>\n        <h2>{weather[0].main}</h2>\n        <p>{dt_txt.substr(0, 10)}</p>\n      </div>\n      <img\n        src={`http://openweathermap.org/img/w/${weather[0].icon}.png`}\n        alt=\"\"\n        className=\"forecast-weather__img\"\n      />\n      <ul>\n        <li>{Math.round(main.temp)}&deg;</li>\n        <li>{wind.speed} m/s</li>\n      </ul>\n      <p className=\"forecast-weather__description\">\n        {weather[0].description.toUpperCase()}\n      </p>\n    </div>\n  );\n};\n\nexport default connect(state => ({\n  appState: state\n}))(WeatherForecastItem);\n","import React, { Component } from \"react\";\nimport \"./style.scss\";\nimport { connect } from \"react-redux\";\nimport { WeatherForecastItem } from \"./WeatheForecastItem\";\n\nconst WEATHER_FORECAST_TIME = \"12:00:00\";\n\nconst WeatherForecast = props => {\n  const render = [];\n  render.push(props.appState.forecast[props.appState.forecast.length - 1]);\n\n  return !render.includes(undefined)\n    ? render.map(weatherForecast =>\n        weatherForecast.list\n          .filter(time => time.dt_txt.includes(WEATHER_FORECAST_TIME))\n          .map((forecastItem, i) => (\n            <WeatherForecastItem key={i} state={forecastItem} />\n          ))\n      )\n    : \"\";\n};\n\nexport default connect(state => ({\n  appState: state\n}))(WeatherForecast);\n","import React from \"react\";\nimport \"./style.scss\";\nimport { connect } from \"react-redux\";\n\nconst CurrentWeather = props => {\n  const arrCurrentWeather = props.appState.current;\n\n  if (arrCurrentWeather[arrCurrentWeather.length - 1] !== undefined) {\n    const { name, sys, main, weather, wind, clouds } = arrCurrentWeather[\n      arrCurrentWeather.length - 1\n    ];\n    return (\n      <div className=\"current-weather-info\">\n        <div className=\"current-weather__main\">\n          <div className=\"current-weather__city\">\n            {name}, {sys.country}\n          </div>\n          <div className=\"current-weather__temp\">\n            {Math.round(main.temp)}&deg;\n            <img\n              src={`http://openweathermap.org/img/w/${weather[0].icon}.png`}\n            />\n          </div>\n          <div className=\"current-weather__description\">\n            {weather[0].description.toUpperCase()}\n          </div>\n        </div>\n        <div className=\"current-weather__more\">\n          <ul>\n            <li>Humidity: {main.humidity} %</li>\n            <li>Pressure: {main.pressure} mb</li>\n            <li>Wind speed: {wind.speed} m/s</li>\n            <li>Clouds: {clouds.all}</li>\n          </ul>\n        </div>\n      </div>\n    );\n  } else {\n    return \"\";\n  }\n};\n\nexport default connect(state => ({\n  appState: state\n}))(CurrentWeather);\n","const API_KEY = \"&units=metric&APPID=9e5f732b51c403196a6a5096551e6098\";\r\nconst API_DATA_WEATHER = \"https://api.openweathermap.org/data/2.5/weather?q=\";\r\nconst API_DATA_FORECAST = \"https://api.openweathermap.org/data/2.5/forecast?q=\";\r\n\r\nclass WeatherDataService {\r\n  getCurrentWeather(city) {\r\n    return fetch(API_DATA_WEATHER + city + API_KEY)\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  getWeatherForecast(city) {\r\n    return fetch(API_DATA_FORECAST + city + API_KEY)\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n}\r\n\r\nexport default new WeatherDataService();\r\n","import React, { Component } from \"react\";\nimport \"./style.scss\";\nimport { Nav } from \"../Nav\";\nimport { History } from \"../History\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport { WeatherForecast } from \"../WeatherForecast\";\nimport { CurrentWeather } from \"../CurrentWeather\";\nimport { connect } from \"react-redux\";\nimport WeatherDataServices from \"../../services/WeatherDataServices\";\n\nclass App extends Component {\n  handleSubmit = e => {\n    e.preventDefault();\n    this.getInfoFromApi(this.cityInput.value);\n    this.cityInput.value = \"\";\n  };\n\n  getInfoFromApi = city => {\n    WeatherDataServices.getCurrentWeather(city).then(currentWeather => {\n      WeatherDataServices.getWeatherForecast(city).then(weatherForecast => {\n        if (currentWeather.message === \"city not found\") {\n          alert(\"No found city, please correct name!\");\n          return false;\n        }\n        this.props.addCurrentWeather(currentWeather);\n        this.props.addWeatherForecast(weatherForecast);\n        this.props.addCity(city);\n      });\n    });\n  };\n\n  render() {\n    return (\n      <Router>\n        <div className=\"container\">\n          <h1 className=\"header\">React Weather Forecast</h1>\n          <div className=\"search-wrapper\">\n            <form onSubmit={this.handleSubmit}>\n              <input\n                placeholder=\"Enter city in english... (Kiev, UA)\"\n                className=\"search-input\"\n                type=\"text\"\n                ref={input => {\n                  this.cityInput = input;\n                }}\n              />\n            </form>\n          </div>\n          <Nav />\n          <History getInfoFromApi={this.getInfoFromApi} />\n          <Route exact path=\"/\" component={CurrentWeather} />\n          <Route path=\"/next\" component={WeatherForecast} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default connect(\n  state => ({\n    appState: state\n  }),\n  dispatch => ({\n    addCity: city => {\n      const payload = city;\n      dispatch({ type: \"ADD_CITY\", payload });\n    },\n    addCurrentWeather: weather => {\n      const payload = Object.assign({}, weather);\n      dispatch({ type: \"CURRENT_WEATHER\", payload });\n    },\n    addWeatherForecast: weather => {\n      const payload = Object.assign({}, weather);\n      dispatch({ type: \"WEATHER_FORECAST\", payload });\n    }\n  })\n)(App);\n","const initialState = [];\r\n\r\nconst cities = (state = initialState, action) => {\r\n  if (action.type === \"ADD_CITY\") {\r\n    return [...state, action.payload];\r\n  } else if (action.type === \"DELETE_CITIES\") {\r\n    return [action.payload];\r\n  }\r\n  return state;\r\n};\r\n\r\nexport default cities;\r\n","const initialState = [];\r\n\r\nconst current = (state = initialState, action) => {\r\n  if (action.type === \"CURRENT_WEATHER\") {\r\n    return [...state, action.payload];\r\n  }\r\n  return state;\r\n};\r\n\r\nexport default current;\r\n","const initialState = [];\r\n\r\nconst forecast = (state = initialState, action) => {\r\n  if (action.type === \"WEATHER_FORECAST\") {\r\n    return [...state, action.payload];\r\n  }\r\n  return state;\r\n};\r\n\r\nexport default forecast;\r\n","import { combineReducers } from \"redux\";\r\nimport cities from \"./cities\";\r\nimport current from \"./current\";\r\nimport forecast from \"./forecast\";\r\n\r\nexport default combineReducers({\r\n  cities,\r\n  current,\r\n  forecast\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { App } from \"./components/App\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore } from \"redux\";\r\nimport reducer from \"./reducers\";\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}